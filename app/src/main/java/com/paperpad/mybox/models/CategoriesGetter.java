/**
 * 
 */
package com.paperpad.mybox.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.j256.ormlite.field.DataType;
import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.field.ForeignCollectionField;
import com.j256.ormlite.table.DatabaseTable;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

/**
 * @author euphordev02
 * 
 */
@DatabaseTable(tableName = "categories_getter")
@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({ "name_categorie", "id_categorie", "id_coffret" })
public class CategoriesGetter/* implements Comparable<CategoriesGetter>*/{

	// id is generated by the database and set on the object automagically
	@DatabaseField(generatedId = true)
	int id;
	
	@DatabaseField(canBeNull = true, dataType = DataType.STRING)
	@JsonProperty("name_categorie")
	private String name_categorie;
	
	@DatabaseField(canBeNull = false)
	@JsonProperty("id_categorie")
	private Integer id_categorie;
	
	@ForeignCollectionField(eager = true)
	private Collection<IdCoffret> id_coffret2 = new ArrayList<IdCoffret>();
	
	@JsonProperty("id_coffret")
	private List<Integer> id_coffret = new ArrayList<Integer>();
	
	private boolean selected = false;
	
	private Map<String, Object> additionalProperties = new HashMap<String, Object>();

	public CategoriesGetter(String name, int id_cat, boolean selected) {
		super();
		this.name_categorie = name;
		this.id_categorie = id_cat;
		this.selected = selected;
	}

	@JsonProperty("name_categorie")
	public String getName_categorie() {
		return name_categorie;
	}

	@JsonProperty("name_categorie")
	public void setName_categorie(String name_categorie) {
		this.name_categorie = name_categorie;
	}

	@JsonProperty("id_categorie")
	public Integer getId_categorie() {
		return id_categorie;
	}

	@JsonProperty("id_categorie")
	public void setId_categorie(Integer id_categorie) {
		this.id_categorie = id_categorie;
	}

	@JsonProperty("id_coffret")
	public List<Integer> getId_coffret() {
		return id_coffret;
	}

	@JsonProperty("id_coffret")
	public void setId_coffret(List<Integer> id_coffret) {
		this.id_coffret = id_coffret;
	}

	@JsonAnyGetter
	public Map<String, Object> getAdditionalProperties() {
		return this.additionalProperties;
	}

	@JsonAnySetter
	public void setAdditionalProperties(String name, Object value) {
		this.additionalProperties.put(name, value);
	}

	/**
	 * @return the id
	 */
	public int getId() {
		return id;
	}

	/**
	 * @param id the id to set
	 */
	public void setId(int id) {
		this.id = id;
	}

	/**
	 * @return the id_coffret2
	 */
	public Collection<IdCoffret> getId_coffret2() {
		return id_coffret2;
	}

	/**
	 * @param id_coffret2 the id_coffret2 to set
	 */
	public void setId_coffret2(Collection<IdCoffret> id_coffret2) {
		this.id_coffret2 = id_coffret2;
	}

	/**
	 * @return the selected
	 */
	public boolean isSelected() {
		return selected;
	}

	/**
	 * @param selected the selected to set
	 */
	public void setSelected(boolean selected) {
		this.selected = selected;
	}

	public CategoriesGetter() {
		super();
		// TODO Auto-generated constructor stub
	}

	/*@Override
	public int compareTo(CategoriesGetter another) {
		return (this.getId_categorie() - another.getId_categorie());
	}*/

}